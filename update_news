#!/bin/sh
#
# Run from crontab to fetch new editions of online newspapers
# and expire old editions of online newspapers.
# 

# Variables that may need adjustment
RECIPE_LIST="vg.recipe aftenposten.recipe"
expirationDate=`date --date "2 days ago" "+%s"`

# Locations recipes, epub files and the calibre database
# Note: RECIPEDIR is the same directory this script resides in
RECIPEDIR=`(cd $(dirname $0); pwd)`
EPUBFILE=/tmp/avis.epub
LIBRARY_LOCATION=$HOME/aviser
LOG_FILE=/dev/null
#LOG_FILE=/tmp/update_news.log

#
# First fetch the current editions of the online newspapers.
#
echo "Log file for calibre newspaper update script" >$LOG_FILE
cd $RECIPEDIR
for recipe in $RECIPE_LIST;do
    publicationName=`echo $recipe | sed 's/\.recipe$//g'`
    ebook-convert $recipe $EPUBFILE --tags News,$publicationName --preserve-cover-aspect-ratio >>$LOG_FILE
    calibredb add -d --with-library $LIBRARY_LOCATION $EPUBFILE >>$LOG_FILE
    rm $EPUBFILE
done


#
# Expire newspaper editions older than expireDate (set at the start of the script).
#

# Setting the bash Internal Field Separator to a line shift,
# causes calibredb output to be read line by line in the for loop.
IFS="
"

for line in `calibredb list --with-library $LIBRARY_LOCATION -f pubdate`;do
  # Avoid processing the header line.
  lineStrippedOfTrailingSpc=`echo $line | sed 's/ *$//g'`
  if [ "id pubdate" != "$lineStrippedOfTrailingSpc" ];then
      id=`echo $line | sed 's/^\([0-9]\+\) .*/\1/g'`
      pubdate=`echo $line | sed 's/^\([0-9]\+\) \(.*\)/\2/g' | tr "T" " "`
      pubdateAsSeconds=`date --date $pubdate "+%s"`
      if [ "$pubdateAsSeconds" -lt "$expirationDate" ]; then
          # Expiring article older than the expirationDate
          calibredb remove $id --with-library $LIBRARY_LOCATION >>$LOG_FILE
      fi
  fi
done
